2025-07-14 17:39:46,984 - INFO - Sample train set 1500/67349
2025-07-14 17:39:46,985 - INFO - ... including dev set 500 samples
2025-07-14 17:39:46,985 - INFO - Loading model with FP16...
8
2025-07-14 17:39:53,003 - INFO - Done with 6.02s
2025-07-14 17:39:53,594 - INFO - Dev samples: 500
2025-07-14 17:39:53,594 - INFO - Train samples: 1000
2025-07-14 17:39:53,594 - INFO - Eval sample length is 872
2025-07-14 17:39:53,595 - INFO - Tokenizing training samples...
### layer-wise gradient sparsity = None
-------------------------- Training Epoch 0 --------------------------
2025-07-14 17:39:54,502 - INFO - Done with 0.91s
/home/rinya/anaconda3/envs/zollm2/lib/python3.10/site-packages/transformers/optimization.py:391: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning
  warnings.warn(
2025-07-14 17:39:54,524 - INFO - ***** Running training *****
2025-07-14 17:39:54,524 - INFO -   Num examples = 1000
2025-07-14 17:39:54,524 - INFO -   Num Epochs = 318
2025-07-14 17:39:54,524 - INFO -   Instantaneous batch size per device = 16
2025-07-14 17:39:54,524 - INFO -   Total train batch size (w. parallel, distributed & accumulation) = 16
2025-07-14 17:39:54,524 - INFO -   Gradient Accumulation steps = 1
2025-07-14 17:39:54,524 - INFO -   Total optimization steps = 20000
2025-07-14 17:39:54,525 - INFO -   Number of trainable parameters = 1315758080
  0%|                                                                                                                                                                                         | 0/20000 [00:00<?, ?it/s]You're using a GPT2TokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.
{'peak_mem': 3.474902629852295, 'step_consumption': 160469.64263916016, 'epoch': 0.02}
  0%|                                                                                                                                                                            | 1/20000 [02:40<891:28:25, 160.47s/it]


  0%|                                                                                                                                                                            | 3/20000 [08:01<891:12:07, 160.44s/it]

  0%|                                                                                                                                                                            | 4/20000 [10:40<888:52:02, 160.03s/it]

  0%|                                                                                                                                                                            | 5/20000 [13:20<888:32:20, 159.98s/it]

  0%|                                                                                                                                                                            | 6/20000 [16:00<889:14:16, 160.11s/it]
  0%|                                                                                                                                                                            | 6/20000 [16:00<889:14:16, 160.11s/it]Traceback (most recent call last):
  File "/home/rinya/zero-order-optimization/src/run.py", line 740, in <module>
    main()
  File "/home/rinya/zero-order-optimization/src/run.py", line 692, in main
    framework.train(train_samples, dev_samples if dev_samples is not None else eval_samples, eval_samples)
  File "/home/rinya/zero-order-optimization/src/run.py", line 577, in train
    trainer.train(resume_from_checkpoint=last_checkpoint)
  File "/home/rinya/anaconda3/envs/zollm2/lib/python3.10/site-packages/transformers/trainer.py", line 1662, in train
    return inner_training_loop(
  File "/home/rinya/zero-order-optimization/src/trainer.py", line 546, in _inner_training_loop
    tr_loss_step = self.optimizer.step(closure)
  File "/home/rinya/anaconda3/envs/zollm2/lib/python3.10/site-packages/torch/optim/optimizer.py", line 373, in wrapper
    out = func(*args, **kwargs)
  File "/home/rinya/anaconda3/envs/zollm2/lib/python3.10/site-packages/torch/utils/_contextlib.py", line 115, in decorate_context
    return func(*args, **kwargs)
  File "/home/rinya/zero-order-optimization/src/optimizers/zo_sampling_muon.py", line 60, in step
    zo_muon_perturb_parameters(1)
  File "/home/rinya/zero-order-optimization/src/optimizers/zo_sampling_muon.py", line 50, in zo_muon_perturb_parameters
    E = sample_ortho_approx(param.data.shape, device=self.device)
  File "/home/rinya/zero-order-optimization/src/optimizers/opt_utils/sampling.py", line 326, in sample_ortho_approx
    E = torch_ortho_rvs(p, device=device)
  File "/home/rinya/zero-order-optimization/src/optimizers/opt_utils/sampling.py", line 92, in torch_ortho_rvs
    q, r = torch.linalg.qr(z)
KeyboardInterrupt